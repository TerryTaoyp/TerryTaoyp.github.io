<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[新的开始]]></title>
    <url>%2F2017%2F12%2F03%2Ft0001%2F</url>
    <content type="text"><![CDATA[导语： 红红火火，恍恍惚惚，大学已经走过了两年半，对于计算机专业的学生来说，马上就要准备春招了；在几位大佬的帮助下，自己也被中国最好的几个公司面试了一遍，说实话，打击挺大的，感觉自己一无是处，但是更多的是庆幸吧，幸好有他们几个，要不然这样的我直接去社会上，怕是会被现实打击的站不起来，慢慢的变成另一种模样。作为一般院校的学生，我们真的和那些学生差距挺大的，或许我们一开始的学习体系就是错的，我们的瞎忙活只是为了自我安慰，给自己一种自己还可以的假象，我们真的要学会开眼看世界，我们学习速度远远跟不上自己脑海中那些学霸的速度，更不要说现在计算机的发展速度，我们真的应该更努力的，我们肯定也可以更努力的。 一、我的大学&emsp;&emsp;我是一名来自东北师范大学计算机学院的学生，我们学校的模式就是大一学院疯狂的向学生推荐ACM，当你坚持训练几个月甚至一年的时候，很多人会因为不知道这个以后会干什么的选择放弃，因为我们的ACM就是不停的刷题，其他什么都不用做，拿个奖项学院就可以为你保研；假如你不想干ACM，学校还有很多工作室，这里面你可以拿着一些工资，然后不停的为学校工作，做各种网站；上课状态就是进入教室，看老师已经用了N年的PPT，用着古老的软件，还告诉我们说，讲的是一种思想，你们要学习我这种思想，然后我们就像文科生一样，考前背背书就行了，就这样日如一日，年复一年，我们毕业了，很大一部分也留校读研了，然后呢？以后也不知道干什么。就好像没有人真正的去学习技术，每一个团队都感觉好努力，可又都好麻木。我相信很多大学的学生也是这样的，因为我们没有一个人来正确的引导我们，我们根本就见不了那么多东西，根本就没有听说过，没有一个先例，我们整天都在瞎忙，就像我们的高考一样 ，你做了再多题，假如方向不对的话，有用吗，为什么县城的高中很少出清华北大的学生，不是因为他们差，因为他们没有一条完整的道路去走，一切都要靠自己摸索。我们应该怀着一颗谦卑的心，不要让贫穷限制了你的眼界。 二、我这两年走的弯路&emsp;&emsp;大一刚入学校，在老师和学长学姐的引导下，加各种社团，然后也跟着ACM集训，但是性格原因，我真的不适合那种放弃所有，只为刷题的日子，然后其他的又啥都不懂，挺难受的，然后又听我姐的去学了前端开发，学了一些基本的语句就去找工作了，其实上没有一点深度，也就没有下心思去研究，而是把那些语句给背了下来，这 不是学习，这是背书 ；大二开学后开始学习javaWeb开发，在自己刚刚学会的时候就开始跟着开发了 ，每天就是分析 需求，敲代码，然后就是背书，不错，依然是背书，看起来学的知识面很宽，其实上都是背书的过程，一年中在几个项目中缝缝补补，在社团中兢兢业业，然后大二就结束了；大三感觉自己翅膀硬了，会自己接外包了，就有点飘了，不停的自己开发新的项目，同样的技术，不停的复制代码，等到面试的 时候 ，忍不住爆粗口，我在 我们这明明很厉害了啊，为啥啥都不会呢，他们是不是在为难我胖虎，很显然，人家懒得为难你胖虎，就是单纯因为你太菜了；写到这里，心里头 忍不住飘来了一阵感伤…… 三、我的未来之旅&emsp;&emsp;以前的博客已经写了一百多篇了，要放弃还挺有点舍不得，但是以前的博客就像是一个错题本一样，把自己遇到的错题和最新的背的书记录下来 ，这不是技术文章，而是记述文章，接下来的半年甚至一年中，我会在这个新家写一个大学生的java学习之路的专栏，把自己心中的那个路线以及我个人的理解写出来，仅供大家参考，更多的是请大家批评指正。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>前言</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HelloWorld引发的思考]]></title>
    <url>%2F2017%2F12%2F03%2Ft0002%2F</url>
    <content type="text"><![CDATA[一、手写源程序&emsp;&emsp;我们打开任何一本Java学习的书籍，都会告诉我们用记事本或者其他的文本编辑器写一个简单的小程序，然后javac 类名，进行编译，会在同一文件下生成一个同名的.calss文件；我们这里先怒写一个HelloWorld.java，代码如下： 12345public class HelloWorld &#123; public static void main(String[] args)&#123; System.out.println(&quot;Hello World!&quot;); &#125;&#125; 我们用cmd命令打开我们编译后的.class文件，cmd的命令为:javap -v 类名，HelloWorld.class的内部代码如下：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475Classfile /E:/DataBase/Idea/JavaStudy/out/production/JavaStudy/com/tao/study/one/HelloWorld.class Last modified 2017-12-3; size 570 bytes MD5 checksum e34e8917fa1c76751b4ea9a2f491d17a Compiled from &quot;HelloWorld.java&quot;public class com.tao.study.one.HelloWorld minor version: 0 //副版本号 major version: 52 //编译器版本号 == jdk1.8 flags: ACC_PUBLIC, ACC_SUPER//常量池Constant pool: #1 = Methodref #6.#20 // java/lang/Object.&quot;&lt;init&gt;&quot;:()V #2 = Fieldref #21.#22 // java/lang/System.out:Ljava/io/PrintStream; #3 = String #23 // Hello World! #4 = Methodref #24.#25 // java/io/PrintStream.println:(Ljava/lang/String;)V #5 = Class #26 // com/tao/study/one/HelloWorld #6 = Class #27 // java/lang/Object #7 = Utf8 &lt;init&gt; #8 = Utf8 ()V #9 = Utf8 Code #10 = Utf8 LineNumberTable #11 = Utf8 LocalVariableTable #12 = Utf8 this #13 = Utf8 Lcom/tao/study/one/HelloWorld; #14 = Utf8 main #15 = Utf8 ([Ljava/lang/String;)V #16 = Utf8 args #17 = Utf8 [Ljava/lang/String; #18 = Utf8 SourceFile #19 = Utf8 HelloWorld.java #20 = NameAndType #7:#8 // &quot;&lt;init&gt;&quot;:()V #21 = Class #28 // java/lang/System #22 = NameAndType #29:#30 // out:Ljava/io/PrintStream; #23 = Utf8 Hello World! #24 = Class #31 // java/io/PrintStream #25 = NameAndType #32:#33 // println:(Ljava/lang/String;)V #26 = Utf8 com/tao/study/one/HelloWorld #27 = Utf8 java/lang/Object #28 = Utf8 java/lang/System #29 = Utf8 out #30 = Utf8 Ljava/io/PrintStream; #31 = Utf8 java/io/PrintStream #32 = Utf8 println #33 = Utf8 (Ljava/lang/String;)V&#123; public com.tao.study.one.HelloWorld(); descriptor: ()V flags: ACC_PUBLIC Code: stack=1, locals=1, args_size=1 0: aload_0 1: invokespecial #1 // Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V 4: return LineNumberTable: line 6: 0 LocalVariableTable: Start Length Slot Name Signature 0 5 0 this Lcom/tao/study/one/HelloWorld; public static void main(java.lang.String[]); descriptor: ([Ljava/lang/String;)V flags: ACC_PUBLIC, ACC_STATIC Code: stack=2, locals=1, args_size=1 0: getstatic #2 // Field java/lang/System.out:Ljava/io/PrintStream; 3: ldc #3 // String Hello World! 5: invokevirtual #4 // Method java/io/PrintStream.println:(Ljava/lang/String;)V 8: return LineNumberTable: line 8: 0 line 9: 8 LocalVariableTable: Start Length Slot Name Signature 0 9 0 args [Ljava/lang/String;&#125;SourceFile: &quot;HelloWorld.java&quot; 二、提出疑问&emsp;&emsp;看到上面的结果，我们的第一感觉肯定是，woc，怎么这么神奇，这里面都发生了什么呢？那我们就要带着这些疑问去探究他们了，在百度上一顿操作之后，我们知道了javac是java自带的编译器，将java语言规范转化成JVM能够识别的字节码文件(.class文件)；这是就更加懵了，甚至有点想跳过，一个过来人告诉你，不要这样子哦。下面我们来 总结一下这里面的问题，然后去探究一下java的世界到底是一个怎样的存在。 问题有：1、 什么是javac编译器？它又有什么作用？它又是怎样工作的呢？2、 为什么要把字节码文件加载到JVM中呢？字节码文件又是如何加载到JVM中的？3、 JVM是什么？它是如何工作的呢？ &emsp;&emsp;看到这些疑问你是不是有点兴奋了，原来java可以学习的东西有这么多的啊，那我们就开始我们的探索之旅吧。问题要一个个的解决，我们就按顺序进行研究吧！ 编译原理1.1 &emsp;javac是java语言自带的一种编译器，我们都知道java有自己的语言规范，写错了一小处代码，整个项目都会无法运行，这就是规范的魅力，无规矩不成方圆，代码世界中同样如此，每一门语言都是一个王国，我们都是它的臣民；但是java语言不是机器语言，我们的 机器是无法识别的，于是我们的java国王大手一挥创建了外交部，让javac负责这个部门，让它负责对外交流，但是javac这个小伙发现一个人的力量是有限的，要充分发挥自己的部长身份，于是他找到自己的得力干将JVM，让他负责与机器王国进行交流；每当国王发布新的命令的时候(.java文件)，javac就将其编译成字节码文件，然后直接丢给自己的小弟JVM，自己只负责与国王(java类)对话交流； 1.2 &emsp;我们的javac部长又是如何工作的呢？咱们明天再讲，一会有点事情，要去接受大佬的蹂躏；]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java基础</tag>
      </tags>
  </entry>
</search>
